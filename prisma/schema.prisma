// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  username  String     @unique
  email     String     @unique
  password  String
  role      UserRole[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Role {
  id        String     @id @default(uuid())
  name      String     @unique
  users     UserRole[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  RoleMenu  RoleMenu[]
}

model Menu {
  id   String @id @default(uuid())
  name String @unique
  path String

  parentId String? // opsional agar menu root tidak wajib punya parent
  parent   Menu?   @relation("MenuHierarchy", fields: [parentId], references: [id])
  children Menu[]  @relation("MenuHierarchy") // relasi balik ke anak-anak

  roles     RoleMenu[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// PIVOT: User - Role
model UserRole {
  id        String   @id @default(uuid())
  userId    String
  roleId    String
  updateBy  String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  role      Role     @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId])
}

// PIVOT: Role - Menu
model RoleMenu {
  id        String   @id @default(uuid())
  roleId    String
  menuId    String
  updateBy  String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  role      Role     @relation(fields: [roleId], references: [id])
  menu      Menu     @relation(fields: [menuId], references: [id])

  @@unique([roleId, menuId])
}
